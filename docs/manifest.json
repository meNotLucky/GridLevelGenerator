{
  "sitemap": {
    "fileOptions": {
      "api/*": {
        "baseUrl": "https://menotlucky.github.io/GridLevelGenerator/",
        "changefreq": "daily"
      }
    },
    "baseUrl": "https://menotlucky.github.io/GridLevelGenerator/",
    "changefreq": "weekly"
  },
  "homepages": [],
  "source_base_path": "C:/Users/Lukas/Documents/Unity Projects/Unnamed Project/docfx_project",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      },
      "is_incremental": false
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/LevelGenerator.Generator.GridCell.yml",
      "output": {
        ".html": {
          "relative_path": "api/LevelGenerator.Generator.GridCell.html",
          "hash": "lWxf+6nDV1CMhThYZQqo5Q=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/LevelGenerator.Generator.GridLevelGenerator.yml",
      "output": {
        ".html": {
          "relative_path": "api/LevelGenerator.Generator.GridLevelGenerator.html",
          "hash": "L9s3JIFbFL1X4IGgyJDsvg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/LevelGenerator.Generator.GridRoom.yml",
      "output": {
        ".html": {
          "relative_path": "api/LevelGenerator.Generator.GridRoom.html",
          "hash": "qkO50oTi/3G2KokxNBd4eQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/LevelGenerator.Generator.yml",
      "output": {
        ".html": {
          "relative_path": "api/LevelGenerator.Generator.html",
          "hash": "ZNRK/F4uKbQaQg0smvL8kg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/LevelGenerator.Utility.ExitDirection.yml",
      "output": {
        ".html": {
          "relative_path": "api/LevelGenerator.Utility.ExitDirection.html",
          "hash": "ql5Q1nvmUbW+MrAf1CzSNw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/LevelGenerator.Utility.GridAlignment.yml",
      "output": {
        ".html": {
          "relative_path": "api/LevelGenerator.Utility.GridAlignment.html",
          "hash": "zuT0AKGGzalFIVHNb/H8Jg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/LevelGenerator.Utility.GridLevelUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/LevelGenerator.Utility.GridLevelUtility.html",
          "hash": "Nn9kEEPb0FCIWrKlnaesiw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/LevelGenerator.Utility.yml",
      "output": {
        ".html": {
          "relative_path": "api/LevelGenerator.Utility.html",
          "hash": "BcIA5p2c9liASKW6/M7M7w=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html",
          "hash": "yTY/A8e64vwSN4lnJcdg7A=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/intro.md",
      "output": {
        ".html": {
          "relative_path": "articles/intro.html",
          "hash": "OAZVCAPYcdLGvfnP6Yy6DA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/quickstart.md",
      "output": {
        ".html": {
          "relative_path": "articles/quickstart.html",
          "hash": "zx33reo97bViQsQgtNma1A=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/toc.yml",
      "output": {
        ".html": {
          "relative_path": "articles/toc.html",
          "hash": "FVWCAQcjpJRuoTLRDKrDqg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html",
          "hash": "KQZIcGliKZVxv4m2EjMLhA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html",
          "hash": "XDJBsIDV1skKtuth5Cn1dw=="
        }
      },
      "is_incremental": false,
      "version": ""
    }
  ],
  "incremental_info": [
    {
      "status": {
        "can_incremental": true,
        "incrementalPhase": "build",
        "total_file_count": 0,
        "skipped_file_count": 0
      },
      "processors": {
        "ConceptualDocumentProcessor": {
          "can_incremental": true,
          "incrementalPhase": "build",
          "total_file_count": 3,
          "skipped_file_count": 3
        },
        "ManagedReferenceDocumentProcessor": {
          "can_incremental": true,
          "incrementalPhase": "build",
          "total_file_count": 8,
          "skipped_file_count": 8
        },
        "TocDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor TocDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        }
      }
    },
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot support incremental post processing, the reason is: should not trace intermediate info.",
        "incrementalPhase": "postProcessing",
        "total_file_count": 0,
        "skipped_file_count": 0
      },
      "processors": {}
    }
  ],
  "version_info": {},
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}